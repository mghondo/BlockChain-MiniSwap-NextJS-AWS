{
 "Description": "MiniSwap Database Infrastructure - VPC + RDS PostgreSQL",
 "Resources": {
  "MiniSwapVPC5j6kwvEE1DC0E9": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "miniswap-vpc-5j6kwv"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/Resource"
   }
  },
  "MiniSwapVPC5j6kwvprivatesubnetSubnet1Subnet5AF40FDA": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/private-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/private-subnetSubnet1/Subnet"
   }
  },
  "MiniSwapVPC5j6kwvprivatesubnetSubnet1RouteTable849476D4": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/private-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/private-subnetSubnet1/RouteTable"
   }
  },
  "MiniSwapVPC5j6kwvprivatesubnetSubnet1RouteTableAssociation4BBB2D71": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MiniSwapVPC5j6kwvprivatesubnetSubnet1RouteTable849476D4"
    },
    "SubnetId": {
     "Ref": "MiniSwapVPC5j6kwvprivatesubnetSubnet1Subnet5AF40FDA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/private-subnetSubnet1/RouteTableAssociation"
   }
  },
  "MiniSwapVPC5j6kwvprivatesubnetSubnet1DefaultRoute0AF1CBC5": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MiniSwapVPC5j6kwvpublicsubnetSubnet1NATGateway38719761"
    },
    "RouteTableId": {
     "Ref": "MiniSwapVPC5j6kwvprivatesubnetSubnet1RouteTable849476D4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/private-subnetSubnet1/DefaultRoute"
   }
  },
  "MiniSwapVPC5j6kwvprivatesubnetSubnet2SubnetDEDD2F44": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/private-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/private-subnetSubnet2/Subnet"
   }
  },
  "MiniSwapVPC5j6kwvprivatesubnetSubnet2RouteTable35084514": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/private-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/private-subnetSubnet2/RouteTable"
   }
  },
  "MiniSwapVPC5j6kwvprivatesubnetSubnet2RouteTableAssociationAFBACCB1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MiniSwapVPC5j6kwvprivatesubnetSubnet2RouteTable35084514"
    },
    "SubnetId": {
     "Ref": "MiniSwapVPC5j6kwvprivatesubnetSubnet2SubnetDEDD2F44"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/private-subnetSubnet2/RouteTableAssociation"
   }
  },
  "MiniSwapVPC5j6kwvprivatesubnetSubnet2DefaultRoute2862E655": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MiniSwapVPC5j6kwvpublicsubnetSubnet1NATGateway38719761"
    },
    "RouteTableId": {
     "Ref": "MiniSwapVPC5j6kwvprivatesubnetSubnet2RouteTable35084514"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/private-subnetSubnet2/DefaultRoute"
   }
  },
  "MiniSwapVPC5j6kwvpublicsubnetSubnet1SubnetD5D9D735": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet1/Subnet"
   }
  },
  "MiniSwapVPC5j6kwvpublicsubnetSubnet1RouteTable43452C59": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet1/RouteTable"
   }
  },
  "MiniSwapVPC5j6kwvpublicsubnetSubnet1RouteTableAssociation93939A95": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MiniSwapVPC5j6kwvpublicsubnetSubnet1RouteTable43452C59"
    },
    "SubnetId": {
     "Ref": "MiniSwapVPC5j6kwvpublicsubnetSubnet1SubnetD5D9D735"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet1/RouteTableAssociation"
   }
  },
  "MiniSwapVPC5j6kwvpublicsubnetSubnet1DefaultRoute6C865D88": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MiniSwapVPC5j6kwvIGW34DE2D0F"
    },
    "RouteTableId": {
     "Ref": "MiniSwapVPC5j6kwvpublicsubnetSubnet1RouteTable43452C59"
    }
   },
   "DependsOn": [
    "MiniSwapVPC5j6kwvVPCGW01BC1E16"
   ],
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet1/DefaultRoute"
   }
  },
  "MiniSwapVPC5j6kwvpublicsubnetSubnet1EIPA2D2A8C8": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet1/EIP"
   }
  },
  "MiniSwapVPC5j6kwvpublicsubnetSubnet1NATGateway38719761": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "MiniSwapVPC5j6kwvpublicsubnetSubnet1EIPA2D2A8C8",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "MiniSwapVPC5j6kwvpublicsubnetSubnet1SubnetD5D9D735"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet1"
     }
    ]
   },
   "DependsOn": [
    "MiniSwapVPC5j6kwvpublicsubnetSubnet1DefaultRoute6C865D88",
    "MiniSwapVPC5j6kwvpublicsubnetSubnet1RouteTableAssociation93939A95"
   ],
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet1/NATGateway"
   }
  },
  "MiniSwapVPC5j6kwvpublicsubnetSubnet2Subnet14C7C655": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet2/Subnet"
   }
  },
  "MiniSwapVPC5j6kwvpublicsubnetSubnet2RouteTable0C5EFEC4": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet2/RouteTable"
   }
  },
  "MiniSwapVPC5j6kwvpublicsubnetSubnet2RouteTableAssociation46CA2B6B": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MiniSwapVPC5j6kwvpublicsubnetSubnet2RouteTable0C5EFEC4"
    },
    "SubnetId": {
     "Ref": "MiniSwapVPC5j6kwvpublicsubnetSubnet2Subnet14C7C655"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet2/RouteTableAssociation"
   }
  },
  "MiniSwapVPC5j6kwvpublicsubnetSubnet2DefaultRoute666E4A2C": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MiniSwapVPC5j6kwvIGW34DE2D0F"
    },
    "RouteTableId": {
     "Ref": "MiniSwapVPC5j6kwvpublicsubnetSubnet2RouteTable0C5EFEC4"
    }
   },
   "DependsOn": [
    "MiniSwapVPC5j6kwvVPCGW01BC1E16"
   ],
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/public-subnetSubnet2/DefaultRoute"
   }
  },
  "MiniSwapVPC5j6kwvIGW34DE2D0F": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "miniswap-vpc-5j6kwv"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/IGW"
   }
  },
  "MiniSwapVPC5j6kwvVPCGW01BC1E16": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "MiniSwapVPC5j6kwvIGW34DE2D0F"
    },
    "VpcId": {
     "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-5j6kwv/VPCGW"
   }
  },
  "MiniSwapDBSecurityGroup5j6kwv85553861": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for MiniSwap PostgreSQL database",
    "GroupName": "miniswap-db-sg-5j6kwv",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSecurityGroup-5j6kwv/Resource"
   }
  },
  "MiniSwapDBSecurityGroup5j6kwvfromMiniSwapDatabaseStackMiniSwapFargateSecurityGroup5j6kwvB9D7A3AA5432B456748A": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow Fargate service to access PostgreSQL database",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "MiniSwapDBSecurityGroup5j6kwv85553861",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "MiniSwapFargateSecurityGroup5j6kwv854F90B8",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSecurityGroup-5j6kwv/from MiniSwapDatabaseStackMiniSwapFargateSecurityGroup5j6kwvB9D7A3AA:5432"
   }
  },
  "MiniSwapDBSecret5j6kwv605F4252": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "MiniSwap PostgreSQL credentials",
    "GenerateSecretString": {
     "ExcludeCharacters": "\"@/\\",
     "GenerateStringKey": "password",
     "PasswordLength": 16,
     "SecretStringTemplate": "{\"username\":\"miniswap_admin\"}"
    },
    "Name": "swapapp-secrets-5j6kwv"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSecret-5j6kwv/Resource"
   }
  },
  "MiniSwapDBSecret5j6kwvAttachment9318B2FA": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "MiniSwapDBSecret5j6kwv605F4252"
    },
    "TargetId": {
     "Ref": "MiniSwapDB5j6kwvD96360F7"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSecret-5j6kwv/Attachment/Resource"
   }
  },
  "MiniSwapDBSubnetGroup5j6kwv": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for MiniSwap database",
    "DBSubnetGroupName": "miniswap-db-subnet-group-5j6kwv",
    "SubnetIds": [
     {
      "Ref": "MiniSwapVPC5j6kwvprivatesubnetSubnet1Subnet5AF40FDA"
     },
     {
      "Ref": "MiniSwapVPC5j6kwvprivatesubnetSubnet2SubnetDEDD2F44"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSubnetGroup-5j6kwv/Default"
   }
  },
  "MiniSwapDB5j6kwvD96360F7": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "20",
    "BackupRetentionPeriod": 7,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.micro",
    "DBInstanceIdentifier": "miniswap-db-5j6kwv",
    "DBName": "miniswap",
    "DBSubnetGroupName": {
     "Ref": "MiniSwapDBSubnetGroup5j6kwv"
    },
    "DeletionProtection": false,
    "EnablePerformanceInsights": false,
    "Engine": "postgres",
    "EngineVersion": "15.7",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "MiniSwapDBSecret5j6kwv605F4252"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "MiniSwapDBSecret5j6kwv605F4252"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MaxAllocatedStorage": 100,
    "MultiAZ": false,
    "StorageEncrypted": true,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "MiniSwapDBSecurityGroup5j6kwv85553861",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDB-5j6kwv/Resource"
   }
  },
  "MiniSwapECSCluster5j6kwv570D6D8E": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": "miniswap-cluster-5j6kwv",
    "ClusterSettings": [
     {
      "Name": "containerInsights",
      "Value": "disabled"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapECSCluster-5j6kwv/Resource"
   }
  },
  "MiniSwapLogGroup5j6kwv81299725": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/ecs/miniswap-5j6kwv",
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapLogGroup-5j6kwv/Resource"
   }
  },
  "MiniSwapTaskDef5j6kwvTaskRole45ACC7DF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapTaskDef-5j6kwv/TaskRole/Resource"
   }
  },
  "MiniSwapTaskDef5j6kwv49B5C8D5": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "NODE_ENV",
        "Value": "production"
       },
       {
        "Name": "PORT",
        "Value": "3000"
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Sub": "720759362243.dkr.ecr.us-east-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-720759362243-us-east-1:7559f1cb177c6bd49110ea68f3fe8e726242e7ae54071ad98979b7083ca2fd4f"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "MiniSwapLogGroup5j6kwv81299725"
        },
        "awslogs-stream-prefix": "miniswap",
        "awslogs-region": "us-east-1"
       }
      },
      "Name": "miniswap-app-5j6kwv",
      "PortMappings": [
       {
        "ContainerPort": 3000,
        "Protocol": "tcp"
       }
      ],
      "Secrets": [
       {
        "Name": "DB_HOST",
        "ValueFrom": {
         "Fn::Join": [
          "",
          [
           {
            "Ref": "MiniSwapDBSecret5j6kwv605F4252"
           },
           ":host::"
          ]
         ]
        }
       },
       {
        "Name": "DB_USER",
        "ValueFrom": {
         "Fn::Join": [
          "",
          [
           {
            "Ref": "MiniSwapDBSecret5j6kwv605F4252"
           },
           ":username::"
          ]
         ]
        }
       },
       {
        "Name": "DB_PASSWORD",
        "ValueFrom": {
         "Fn::Join": [
          "",
          [
           {
            "Ref": "MiniSwapDBSecret5j6kwv605F4252"
           },
           ":password::"
          ]
         ]
        }
       },
       {
        "Name": "DB_NAME",
        "ValueFrom": {
         "Fn::Join": [
          "",
          [
           {
            "Ref": "MiniSwapDBSecret5j6kwv605F4252"
           },
           ":dbname::"
          ]
         ]
        }
       },
       {
        "Name": "DB_PORT",
        "ValueFrom": {
         "Fn::Join": [
          "",
          [
           {
            "Ref": "MiniSwapDBSecret5j6kwv605F4252"
           },
           ":port::"
          ]
         ]
        }
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "MiniSwapTaskDef5j6kwvExecutionRoleDE1016E7",
      "Arn"
     ]
    },
    "Family": "miniswap-task-5j6kwv",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "MiniSwapTaskDef5j6kwvTaskRole45ACC7DF",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapTaskDef-5j6kwv/Resource"
   }
  },
  "MiniSwapTaskDef5j6kwvExecutionRoleDE1016E7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapTaskDef-5j6kwv/ExecutionRole/Resource"
   }
  },
  "MiniSwapTaskDef5j6kwvExecutionRoleDefaultPolicyE932E4DA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:us-east-1:720759362243:repository/cdk-hnb659fds-container-assets-720759362243-us-east-1"
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MiniSwapLogGroup5j6kwv81299725",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "MiniSwapDBSecret5j6kwv605F4252"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MiniSwapTaskDef5j6kwvExecutionRoleDefaultPolicyE932E4DA",
    "Roles": [
     {
      "Ref": "MiniSwapTaskDef5j6kwvExecutionRoleDE1016E7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapTaskDef-5j6kwv/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "MiniSwapFargateSecurityGroup5j6kwv854F90B8": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for MiniSwap Fargate service",
    "GroupName": "miniswap-fargate-sg-5j6kwv",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapFargateSecurityGroup-5j6kwv/Resource"
   }
  },
  "MiniSwapFargateSecurityGroup5j6kwvfromMiniSwapDatabaseStackMiniSwapALBSecurityGroup5j6kwv38C4FA2C30000881BFDA": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow ALB to access Fargate service",
    "FromPort": 3000,
    "GroupId": {
     "Fn::GetAtt": [
      "MiniSwapFargateSecurityGroup5j6kwv854F90B8",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "MiniSwapALBSecurityGroup5j6kwv3CAD14DC",
      "GroupId"
     ]
    },
    "ToPort": 3000
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapFargateSecurityGroup-5j6kwv/from MiniSwapDatabaseStackMiniSwapALBSecurityGroup5j6kwv38C4FA2C:3000"
   }
  },
  "MiniSwapALBSecurityGroup5j6kwv3CAD14DC": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for MiniSwap Application Load Balancer",
    "GroupName": "miniswap-alb-sg-5j6kwv",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTP traffic from internet",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapALBSecurityGroup-5j6kwv/Resource"
   }
  },
  "MiniSwapALB5j6kwv06C55311": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Name": "miniswap-alb-5j6kwv",
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "MiniSwapALBSecurityGroup5j6kwv3CAD14DC",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "MiniSwapVPC5j6kwvpublicsubnetSubnet1SubnetD5D9D735"
     },
     {
      "Ref": "MiniSwapVPC5j6kwvpublicsubnetSubnet2Subnet14C7C655"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "MiniSwapVPC5j6kwvpublicsubnetSubnet1DefaultRoute6C865D88",
    "MiniSwapVPC5j6kwvpublicsubnetSubnet1RouteTableAssociation93939A95",
    "MiniSwapVPC5j6kwvpublicsubnetSubnet2DefaultRoute666E4A2C",
    "MiniSwapVPC5j6kwvpublicsubnetSubnet2RouteTableAssociation46CA2B6B"
   ],
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapALB-5j6kwv/Resource"
   }
  },
  "MiniSwapALB5j6kwvMiniSwapListener5j6kwvFF346E54": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "MiniSwapTargetGroup5j6kwv71E3B02B"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "MiniSwapALB5j6kwv06C55311"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapALB-5j6kwv/MiniSwapListener-5j6kwv/Resource"
   }
  },
  "MiniSwapTargetGroup5j6kwv71E3B02B": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckIntervalSeconds": 30,
    "HealthCheckPath": "/api/health",
    "HealthCheckProtocol": "HTTP",
    "HealthCheckTimeoutSeconds": 10,
    "HealthyThresholdCount": 2,
    "Name": "miniswap-tg-5j6kwv",
    "Port": 3000,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "UnhealthyThresholdCount": 3,
    "VpcId": {
     "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapTargetGroup-5j6kwv/Resource"
   }
  },
  "MiniSwapFargateService5j6kwvService7A1AAD4E": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "MiniSwapECSCluster5j6kwv570D6D8E"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "miniswap-app-5j6kwv",
      "ContainerPort": 3000,
      "TargetGroupArn": {
       "Ref": "MiniSwapTargetGroup5j6kwv71E3B02B"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "MiniSwapFargateSecurityGroup5j6kwv854F90B8",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "MiniSwapVPC5j6kwvprivatesubnetSubnet1Subnet5AF40FDA"
       },
       {
        "Ref": "MiniSwapVPC5j6kwvprivatesubnetSubnet2SubnetDEDD2F44"
       }
      ]
     }
    },
    "ServiceName": "miniswap-service-5j6kwv",
    "TaskDefinition": {
     "Ref": "MiniSwapTaskDef5j6kwv49B5C8D5"
    }
   },
   "DependsOn": [
    "MiniSwapALB5j6kwvMiniSwapListener5j6kwvFF346E54",
    "MiniSwapTaskDef5j6kwvTaskRole45ACC7DF"
   ],
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapFargateService-5j6kwv/Service"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31STW/bMAz9Lb0rWmv0smM+tsJAsRl2kWtBy6zHxpYMkUoQGP7vg2zH8XrYie89PokUqUQnT8/68QEuvDHVadNQqftCwJwUXPi9R5Po/tgZtf+wx2yvMk9nECxCaVGieEe5C4JvUDZ41+/altkZAiFnF7PKQtmQuV/xI81i+AXyAoIXuEaWWkFvcS0ds/3MtiJg/rRoRRVogie5vngXurGF/wqprT0yD4rReBRuwUKNXvfFyGd/RFN4A1+jrOothq+ZQfmKdT89ayl+2K2FAwiUwJhaFrAGJ8eNDQoN637fBBb0MXeDP8HXEEfKpwN+kKXbQL8qzgqQRb/S5rMF+jNNFWc4qMbVrPtXVy/t3vCgCFrd525a6xgz15AZFzGh2K5/B2YU1gdnTujTFuq4c5SY0zl2jkmcv+6AUWEDLGQaB1UJDVhDtj4nut92XUNm/CSvDqrdmJsG8A9f+4gF7ey54VV+Ws7yrBUdBpUju+ANqrHTQqAmW0fb7yBdkEFZV6H+5G/n5FE/fdfPD59MtPHBCrWo8yn+BeXoXslEAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "VpcId5j6kwv": {
   "Description": "VPC ID for MiniSwap",
   "Value": {
    "Ref": "MiniSwapVPC5j6kwvEE1DC0E9"
   },
   "Export": {
    "Name": "MiniSwap-VPC-5j6kwv"
   }
  },
  "DatabaseEndpoint5j6kwv": {
   "Description": "RDS Database Endpoint",
   "Value": {
    "Fn::GetAtt": [
     "MiniSwapDB5j6kwvD96360F7",
     "Endpoint.Address"
    ]
   },
   "Export": {
    "Name": "MiniSwap-DB-Endpoint-5j6kwv"
   }
  },
  "DatabaseSecretArn5j6kwv": {
   "Description": "Database Secret ARN",
   "Value": {
    "Ref": "MiniSwapDBSecret5j6kwv605F4252"
   },
   "Export": {
    "Name": "MiniSwap-DB-Secret-5j6kwv"
   }
  },
  "ECSClusterName5j6kwv": {
   "Description": "ECS Cluster Name",
   "Value": {
    "Ref": "MiniSwapECSCluster5j6kwv570D6D8E"
   },
   "Export": {
    "Name": "MiniSwap-ECS-Cluster-5j6kwv"
   }
  },
  "TaskDefinitionArn5j6kwv": {
   "Description": "Fargate Task Definition ARN",
   "Value": {
    "Ref": "MiniSwapTaskDef5j6kwv49B5C8D5"
   },
   "Export": {
    "Name": "MiniSwap-TaskDef-5j6kwv"
   }
  },
  "LogGroupName5j6kwv": {
   "Description": "CloudWatch Log Group Name",
   "Value": {
    "Ref": "MiniSwapLogGroup5j6kwv81299725"
   },
   "Export": {
    "Name": "MiniSwap-LogGroup-5j6kwv"
   }
  },
  "LoadBalancerDNS5j6kwv": {
   "Description": "Application Load Balancer DNS Name",
   "Value": {
    "Fn::GetAtt": [
     "MiniSwapALB5j6kwv06C55311",
     "DNSName"
    ]
   },
   "Export": {
    "Name": "MiniSwap-ALB-DNS-5j6kwv"
   }
  },
  "ServiceName5j6kwv": {
   "Description": "ECS Fargate Service Name",
   "Value": {
    "Fn::GetAtt": [
     "MiniSwapFargateService5j6kwvService7A1AAD4E",
     "Name"
    ]
   },
   "Export": {
    "Name": "MiniSwap-Service-5j6kwv"
   }
  },
  "ApplicationURL5j6kwv": {
   "Description": "Application URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "MiniSwapALB5j6kwv06C55311",
        "DNSName"
       ]
      }
     ]
    ]
   }
  },
  "RandomSuffix": {
   "Description": "Random suffix used for resource names",
   "Value": "5j6kwv"
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}