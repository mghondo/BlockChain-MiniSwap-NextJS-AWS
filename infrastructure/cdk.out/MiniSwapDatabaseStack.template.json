{
 "Description": "MiniSwap Database Infrastructure - VPC + RDS PostgreSQL",
 "Resources": {
  "MiniSwapVPCfy6eecE531E0AB": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "miniswap-vpc-fy6eec"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/Resource"
   }
  },
  "MiniSwapVPCfy6eecprivatesubnetSubnet1Subnet84803CFC": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/private-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCfy6eecE531E0AB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/private-subnetSubnet1/Subnet"
   }
  },
  "MiniSwapVPCfy6eecprivatesubnetSubnet1RouteTable92E87F0A": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/private-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCfy6eecE531E0AB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/private-subnetSubnet1/RouteTable"
   }
  },
  "MiniSwapVPCfy6eecprivatesubnetSubnet1RouteTableAssociationBCAEA0CB": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MiniSwapVPCfy6eecprivatesubnetSubnet1RouteTable92E87F0A"
    },
    "SubnetId": {
     "Ref": "MiniSwapVPCfy6eecprivatesubnetSubnet1Subnet84803CFC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/private-subnetSubnet1/RouteTableAssociation"
   }
  },
  "MiniSwapVPCfy6eecprivatesubnetSubnet1DefaultRoute07904007": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MiniSwapVPCfy6eecpublicsubnetSubnet1NATGateway7F060DA5"
    },
    "RouteTableId": {
     "Ref": "MiniSwapVPCfy6eecprivatesubnetSubnet1RouteTable92E87F0A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/private-subnetSubnet1/DefaultRoute"
   }
  },
  "MiniSwapVPCfy6eecprivatesubnetSubnet2Subnet0C586E8D": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/private-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCfy6eecE531E0AB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/private-subnetSubnet2/Subnet"
   }
  },
  "MiniSwapVPCfy6eecprivatesubnetSubnet2RouteTable08C335B6": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/private-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCfy6eecE531E0AB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/private-subnetSubnet2/RouteTable"
   }
  },
  "MiniSwapVPCfy6eecprivatesubnetSubnet2RouteTableAssociationB243F87C": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MiniSwapVPCfy6eecprivatesubnetSubnet2RouteTable08C335B6"
    },
    "SubnetId": {
     "Ref": "MiniSwapVPCfy6eecprivatesubnetSubnet2Subnet0C586E8D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/private-subnetSubnet2/RouteTableAssociation"
   }
  },
  "MiniSwapVPCfy6eecprivatesubnetSubnet2DefaultRoute0EFB70A8": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MiniSwapVPCfy6eecpublicsubnetSubnet1NATGateway7F060DA5"
    },
    "RouteTableId": {
     "Ref": "MiniSwapVPCfy6eecprivatesubnetSubnet2RouteTable08C335B6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/private-subnetSubnet2/DefaultRoute"
   }
  },
  "MiniSwapVPCfy6eecpublicsubnetSubnet1SubnetA82DE362": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCfy6eecE531E0AB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet1/Subnet"
   }
  },
  "MiniSwapVPCfy6eecpublicsubnetSubnet1RouteTableEA7DAF78": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCfy6eecE531E0AB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet1/RouteTable"
   }
  },
  "MiniSwapVPCfy6eecpublicsubnetSubnet1RouteTableAssociation6E5DC8BB": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MiniSwapVPCfy6eecpublicsubnetSubnet1RouteTableEA7DAF78"
    },
    "SubnetId": {
     "Ref": "MiniSwapVPCfy6eecpublicsubnetSubnet1SubnetA82DE362"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet1/RouteTableAssociation"
   }
  },
  "MiniSwapVPCfy6eecpublicsubnetSubnet1DefaultRoute27CF0DE7": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MiniSwapVPCfy6eecIGWCAE9E531"
    },
    "RouteTableId": {
     "Ref": "MiniSwapVPCfy6eecpublicsubnetSubnet1RouteTableEA7DAF78"
    }
   },
   "DependsOn": [
    "MiniSwapVPCfy6eecVPCGW14045340"
   ],
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet1/DefaultRoute"
   }
  },
  "MiniSwapVPCfy6eecpublicsubnetSubnet1EIPD6801E53": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet1/EIP"
   }
  },
  "MiniSwapVPCfy6eecpublicsubnetSubnet1NATGateway7F060DA5": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "MiniSwapVPCfy6eecpublicsubnetSubnet1EIPD6801E53",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "MiniSwapVPCfy6eecpublicsubnetSubnet1SubnetA82DE362"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet1"
     }
    ]
   },
   "DependsOn": [
    "MiniSwapVPCfy6eecpublicsubnetSubnet1DefaultRoute27CF0DE7",
    "MiniSwapVPCfy6eecpublicsubnetSubnet1RouteTableAssociation6E5DC8BB"
   ],
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet1/NATGateway"
   }
  },
  "MiniSwapVPCfy6eecpublicsubnetSubnet2Subnet7EB97FE3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCfy6eecE531E0AB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet2/Subnet"
   }
  },
  "MiniSwapVPCfy6eecpublicsubnetSubnet2RouteTable0DCA8C50": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCfy6eecE531E0AB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet2/RouteTable"
   }
  },
  "MiniSwapVPCfy6eecpublicsubnetSubnet2RouteTableAssociationCD6F15DE": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MiniSwapVPCfy6eecpublicsubnetSubnet2RouteTable0DCA8C50"
    },
    "SubnetId": {
     "Ref": "MiniSwapVPCfy6eecpublicsubnetSubnet2Subnet7EB97FE3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet2/RouteTableAssociation"
   }
  },
  "MiniSwapVPCfy6eecpublicsubnetSubnet2DefaultRoute83EC37DE": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MiniSwapVPCfy6eecIGWCAE9E531"
    },
    "RouteTableId": {
     "Ref": "MiniSwapVPCfy6eecpublicsubnetSubnet2RouteTable0DCA8C50"
    }
   },
   "DependsOn": [
    "MiniSwapVPCfy6eecVPCGW14045340"
   ],
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/public-subnetSubnet2/DefaultRoute"
   }
  },
  "MiniSwapVPCfy6eecIGWCAE9E531": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "miniswap-vpc-fy6eec"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/IGW"
   }
  },
  "MiniSwapVPCfy6eecVPCGW14045340": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "MiniSwapVPCfy6eecIGWCAE9E531"
    },
    "VpcId": {
     "Ref": "MiniSwapVPCfy6eecE531E0AB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-fy6eec/VPCGW"
   }
  },
  "MiniSwapDBSecurityGroupfy6eec7BBDD779": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for MiniSwap PostgreSQL database",
    "GroupName": "miniswap-db-sg-fy6eec",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCfy6eecE531E0AB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSecurityGroup-fy6eec/Resource"
   }
  },
  "MiniSwapDBSecretfy6eec213F7CE3": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "MiniSwap PostgreSQL credentials",
    "GenerateSecretString": {
     "ExcludeCharacters": "\"@/\\",
     "GenerateStringKey": "password",
     "PasswordLength": 16,
     "SecretStringTemplate": "{\"username\":\"miniswap_admin\"}"
    },
    "Name": "swapapp-secrets-fy6eec"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSecret-fy6eec/Resource"
   }
  },
  "MiniSwapDBSecretfy6eecAttachmentCFC3105B": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "MiniSwapDBSecretfy6eec213F7CE3"
    },
    "TargetId": {
     "Ref": "MiniSwapDBfy6eec2849F4E9"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSecret-fy6eec/Attachment/Resource"
   }
  },
  "MiniSwapDBSubnetGroupfy6eec": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for MiniSwap database",
    "DBSubnetGroupName": "miniswap-db-subnet-group-fy6eec",
    "SubnetIds": [
     {
      "Ref": "MiniSwapVPCfy6eecprivatesubnetSubnet1Subnet84803CFC"
     },
     {
      "Ref": "MiniSwapVPCfy6eecprivatesubnetSubnet2Subnet0C586E8D"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSubnetGroup-fy6eec/Default"
   }
  },
  "MiniSwapDBfy6eec2849F4E9": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "20",
    "BackupRetentionPeriod": 7,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.micro",
    "DBInstanceIdentifier": "miniswap-db-fy6eec",
    "DBName": "miniswap",
    "DBSubnetGroupName": {
     "Ref": "MiniSwapDBSubnetGroupfy6eec"
    },
    "DeletionProtection": false,
    "EnablePerformanceInsights": false,
    "Engine": "postgres",
    "EngineVersion": "15.7",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "MiniSwapDBSecretfy6eec213F7CE3"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "MiniSwapDBSecretfy6eec213F7CE3"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MaxAllocatedStorage": 100,
    "MultiAZ": false,
    "StorageEncrypted": true,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "MiniSwapDBSecurityGroupfy6eec7BBDD779",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDB-fy6eec/Resource"
   }
  },
  "MiniSwapECSClusterfy6eec74533B07": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": "miniswap-cluster-fy6eec",
    "ClusterSettings": [
     {
      "Name": "containerInsights",
      "Value": "disabled"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapECSCluster-fy6eec/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12OwW6DMBBEvyV34yYolx5TUkVcWgQR12ox29QJGORdB0XI/14RKKCeZubteL2hDHd7ud1AR4Eqb0GlC9lnDOomoKOvHlUo+7xVIvo2eRKJxOo7MGauMMgDXFzaOMYzFBUufGEHokZpYN2YuSwSV1RaLSve42SQD+ATMHbwGFJsGK3BNcqTaEoHZlA/NRoWGSpnNT9OtnHt84Q18IJQWWSqwcAFreyzZ56KgxvlDPaCvNo7F/5PvLAlyX48f/71+LYGR2AogDA2xGAUjo2/5AUqkn1UOWK0w2yy3osUqXF2fPHpuHXshWlKlFd6uYdbuXuV+82VtA6sM6xrlOmovx5hIbvTAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "VpcIdfy6eec": {
   "Description": "VPC ID for MiniSwap",
   "Value": {
    "Ref": "MiniSwapVPCfy6eecE531E0AB"
   },
   "Export": {
    "Name": "MiniSwap-VPC-fy6eec"
   }
  },
  "DatabaseEndpointfy6eec": {
   "Description": "RDS Database Endpoint",
   "Value": {
    "Fn::GetAtt": [
     "MiniSwapDBfy6eec2849F4E9",
     "Endpoint.Address"
    ]
   },
   "Export": {
    "Name": "MiniSwap-DB-Endpoint-fy6eec"
   }
  },
  "DatabaseSecretArnfy6eec": {
   "Description": "Database Secret ARN",
   "Value": {
    "Ref": "MiniSwapDBSecretfy6eec213F7CE3"
   },
   "Export": {
    "Name": "MiniSwap-DB-Secret-fy6eec"
   }
  },
  "ECSClusterNamefy6eec": {
   "Description": "ECS Cluster Name",
   "Value": {
    "Ref": "MiniSwapECSClusterfy6eec74533B07"
   },
   "Export": {
    "Name": "MiniSwap-ECS-Cluster-fy6eec"
   }
  },
  "RandomSuffix": {
   "Description": "Random suffix used for resource names",
   "Value": "fy6eec"
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}