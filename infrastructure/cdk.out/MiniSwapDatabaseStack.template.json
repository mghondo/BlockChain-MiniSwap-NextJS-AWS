{
 "Description": "MiniSwap Database Infrastructure - VPC + RDS PostgreSQL",
 "Resources": {
  "MiniSwapVPCusl29b518B2E7E": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "miniswap-vpc-usl29b"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/Resource"
   }
  },
  "MiniSwapVPCusl29bprivatesubnetSubnet1SubnetAB161AF0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/private-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCusl29b518B2E7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/private-subnetSubnet1/Subnet"
   }
  },
  "MiniSwapVPCusl29bprivatesubnetSubnet1RouteTable35FD4E5D": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/private-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCusl29b518B2E7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/private-subnetSubnet1/RouteTable"
   }
  },
  "MiniSwapVPCusl29bprivatesubnetSubnet1RouteTableAssociationA30A046E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MiniSwapVPCusl29bprivatesubnetSubnet1RouteTable35FD4E5D"
    },
    "SubnetId": {
     "Ref": "MiniSwapVPCusl29bprivatesubnetSubnet1SubnetAB161AF0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/private-subnetSubnet1/RouteTableAssociation"
   }
  },
  "MiniSwapVPCusl29bprivatesubnetSubnet1DefaultRoute2D3F5482": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MiniSwapVPCusl29bpublicsubnetSubnet1NATGateway703B842C"
    },
    "RouteTableId": {
     "Ref": "MiniSwapVPCusl29bprivatesubnetSubnet1RouteTable35FD4E5D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/private-subnetSubnet1/DefaultRoute"
   }
  },
  "MiniSwapVPCusl29bprivatesubnetSubnet2Subnet35BDCC6E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/private-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCusl29b518B2E7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/private-subnetSubnet2/Subnet"
   }
  },
  "MiniSwapVPCusl29bprivatesubnetSubnet2RouteTableDAEF2978": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/private-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCusl29b518B2E7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/private-subnetSubnet2/RouteTable"
   }
  },
  "MiniSwapVPCusl29bprivatesubnetSubnet2RouteTableAssociation4733D86E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MiniSwapVPCusl29bprivatesubnetSubnet2RouteTableDAEF2978"
    },
    "SubnetId": {
     "Ref": "MiniSwapVPCusl29bprivatesubnetSubnet2Subnet35BDCC6E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/private-subnetSubnet2/RouteTableAssociation"
   }
  },
  "MiniSwapVPCusl29bprivatesubnetSubnet2DefaultRoute8519EB7A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MiniSwapVPCusl29bpublicsubnetSubnet1NATGateway703B842C"
    },
    "RouteTableId": {
     "Ref": "MiniSwapVPCusl29bprivatesubnetSubnet2RouteTableDAEF2978"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/private-subnetSubnet2/DefaultRoute"
   }
  },
  "MiniSwapVPCusl29bpublicsubnetSubnet1Subnet49E7E691": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCusl29b518B2E7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet1/Subnet"
   }
  },
  "MiniSwapVPCusl29bpublicsubnetSubnet1RouteTable4CB37AC0": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCusl29b518B2E7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet1/RouteTable"
   }
  },
  "MiniSwapVPCusl29bpublicsubnetSubnet1RouteTableAssociationE618AE41": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MiniSwapVPCusl29bpublicsubnetSubnet1RouteTable4CB37AC0"
    },
    "SubnetId": {
     "Ref": "MiniSwapVPCusl29bpublicsubnetSubnet1Subnet49E7E691"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet1/RouteTableAssociation"
   }
  },
  "MiniSwapVPCusl29bpublicsubnetSubnet1DefaultRouteE80D05E9": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MiniSwapVPCusl29bIGW9C3447C1"
    },
    "RouteTableId": {
     "Ref": "MiniSwapVPCusl29bpublicsubnetSubnet1RouteTable4CB37AC0"
    }
   },
   "DependsOn": [
    "MiniSwapVPCusl29bVPCGWE3A3CEA1"
   ],
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet1/DefaultRoute"
   }
  },
  "MiniSwapVPCusl29bpublicsubnetSubnet1EIPCB08AA11": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet1/EIP"
   }
  },
  "MiniSwapVPCusl29bpublicsubnetSubnet1NATGateway703B842C": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "MiniSwapVPCusl29bpublicsubnetSubnet1EIPCB08AA11",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "MiniSwapVPCusl29bpublicsubnetSubnet1Subnet49E7E691"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet1"
     }
    ]
   },
   "DependsOn": [
    "MiniSwapVPCusl29bpublicsubnetSubnet1DefaultRouteE80D05E9",
    "MiniSwapVPCusl29bpublicsubnetSubnet1RouteTableAssociationE618AE41"
   ],
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet1/NATGateway"
   }
  },
  "MiniSwapVPCusl29bpublicsubnetSubnet2Subnet73587C59": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCusl29b518B2E7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet2/Subnet"
   }
  },
  "MiniSwapVPCusl29bpublicsubnetSubnet2RouteTableA9184F3C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCusl29b518B2E7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet2/RouteTable"
   }
  },
  "MiniSwapVPCusl29bpublicsubnetSubnet2RouteTableAssociationD8436414": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MiniSwapVPCusl29bpublicsubnetSubnet2RouteTableA9184F3C"
    },
    "SubnetId": {
     "Ref": "MiniSwapVPCusl29bpublicsubnetSubnet2Subnet73587C59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet2/RouteTableAssociation"
   }
  },
  "MiniSwapVPCusl29bpublicsubnetSubnet2DefaultRouteDCB7CC0D": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MiniSwapVPCusl29bIGW9C3447C1"
    },
    "RouteTableId": {
     "Ref": "MiniSwapVPCusl29bpublicsubnetSubnet2RouteTableA9184F3C"
    }
   },
   "DependsOn": [
    "MiniSwapVPCusl29bVPCGWE3A3CEA1"
   ],
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/public-subnetSubnet2/DefaultRoute"
   }
  },
  "MiniSwapVPCusl29bIGW9C3447C1": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "miniswap-vpc-usl29b"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/IGW"
   }
  },
  "MiniSwapVPCusl29bVPCGWE3A3CEA1": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "MiniSwapVPCusl29bIGW9C3447C1"
    },
    "VpcId": {
     "Ref": "MiniSwapVPCusl29b518B2E7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapVPC-usl29b/VPCGW"
   }
  },
  "MiniSwapDBSecurityGroupusl29b6E984A16": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for MiniSwap PostgreSQL database",
    "GroupName": "miniswap-db-sg-usl29b",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCusl29b518B2E7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSecurityGroup-usl29b/Resource"
   }
  },
  "MiniSwapDBSecurityGroupusl29bfromMiniSwapDatabaseStackMiniSwapFargateSecurityGroupusl29b6B2C6E1454327FE7F6BC": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow Fargate service to access PostgreSQL database",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "MiniSwapDBSecurityGroupusl29b6E984A16",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "MiniSwapFargateSecurityGroupusl29b26EA0510",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSecurityGroup-usl29b/from MiniSwapDatabaseStackMiniSwapFargateSecurityGroupusl29b6B2C6E14:5432"
   }
  },
  "MiniSwapDBSecretusl29b8A0A0D0D": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "MiniSwap PostgreSQL credentials",
    "GenerateSecretString": {
     "ExcludeCharacters": "\"@/\\",
     "GenerateStringKey": "password",
     "PasswordLength": 16,
     "SecretStringTemplate": "{\"username\":\"miniswap_admin\"}"
    },
    "Name": "swapapp-secrets-usl29b"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSecret-usl29b/Resource"
   }
  },
  "MiniSwapDBSecretusl29bAttachment056633BE": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "MiniSwapDBSecretusl29b8A0A0D0D"
    },
    "TargetId": {
     "Ref": "MiniSwapDBusl29bB8A79B3F"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSecret-usl29b/Attachment/Resource"
   }
  },
  "MiniSwapDBSubnetGroupusl29b": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for MiniSwap database",
    "DBSubnetGroupName": "miniswap-db-subnet-group-usl29b",
    "SubnetIds": [
     {
      "Ref": "MiniSwapVPCusl29bprivatesubnetSubnet1SubnetAB161AF0"
     },
     {
      "Ref": "MiniSwapVPCusl29bprivatesubnetSubnet2Subnet35BDCC6E"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDBSubnetGroup-usl29b/Default"
   }
  },
  "MiniSwapDBusl29bB8A79B3F": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "20",
    "BackupRetentionPeriod": 7,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.micro",
    "DBInstanceIdentifier": "miniswap-db-usl29b",
    "DBName": "miniswap",
    "DBSubnetGroupName": {
     "Ref": "MiniSwapDBSubnetGroupusl29b"
    },
    "DeletionProtection": false,
    "EnablePerformanceInsights": false,
    "Engine": "postgres",
    "EngineVersion": "15.7",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "MiniSwapDBSecretusl29b8A0A0D0D"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "MiniSwapDBSecretusl29b8A0A0D0D"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MaxAllocatedStorage": 100,
    "MultiAZ": false,
    "StorageEncrypted": true,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "MiniSwapDBSecurityGroupusl29b6E984A16",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapDB-usl29b/Resource"
   }
  },
  "MiniSwapECSClusterusl29bD0F02DE0": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": "miniswap-cluster-usl29b",
    "ClusterSettings": [
     {
      "Name": "containerInsights",
      "Value": "disabled"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapECSCluster-usl29b/Resource"
   }
  },
  "MiniSwapLogGroupusl29b337C0054": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/ecs/miniswap-usl29b",
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapLogGroup-usl29b/Resource"
   }
  },
  "MiniSwapTaskDefusl29bTaskRole0C0CFDC4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapTaskDef-usl29b/TaskRole/Resource"
   }
  },
  "MiniSwapTaskDefusl29b4FFC3C78": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "NODE_ENV",
        "Value": "production"
       },
       {
        "Name": "PORT",
        "Value": "3000"
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Sub": "720759362243.dkr.ecr.us-east-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-720759362243-us-east-1:970d95791738db2b7f7d850f99d08222324221b2be261e13dc757fae8e6a8cbc"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "MiniSwapLogGroupusl29b337C0054"
        },
        "awslogs-stream-prefix": "miniswap",
        "awslogs-region": "us-east-1"
       }
      },
      "Name": "miniswap-app-usl29b",
      "PortMappings": [
       {
        "ContainerPort": 3000,
        "Protocol": "tcp"
       }
      ],
      "Secrets": [
       {
        "Name": "DB_HOST",
        "ValueFrom": {
         "Fn::Join": [
          "",
          [
           {
            "Ref": "MiniSwapDBSecretusl29b8A0A0D0D"
           },
           ":host::"
          ]
         ]
        }
       },
       {
        "Name": "DB_USER",
        "ValueFrom": {
         "Fn::Join": [
          "",
          [
           {
            "Ref": "MiniSwapDBSecretusl29b8A0A0D0D"
           },
           ":username::"
          ]
         ]
        }
       },
       {
        "Name": "DB_PASSWORD",
        "ValueFrom": {
         "Fn::Join": [
          "",
          [
           {
            "Ref": "MiniSwapDBSecretusl29b8A0A0D0D"
           },
           ":password::"
          ]
         ]
        }
       },
       {
        "Name": "DB_NAME",
        "ValueFrom": {
         "Fn::Join": [
          "",
          [
           {
            "Ref": "MiniSwapDBSecretusl29b8A0A0D0D"
           },
           ":dbname::"
          ]
         ]
        }
       },
       {
        "Name": "DB_PORT",
        "ValueFrom": {
         "Fn::Join": [
          "",
          [
           {
            "Ref": "MiniSwapDBSecretusl29b8A0A0D0D"
           },
           ":port::"
          ]
         ]
        }
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "MiniSwapTaskDefusl29bExecutionRole84F9F30C",
      "Arn"
     ]
    },
    "Family": "miniswap-task-usl29b",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "MiniSwapTaskDefusl29bTaskRole0C0CFDC4",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapTaskDef-usl29b/Resource"
   }
  },
  "MiniSwapTaskDefusl29bExecutionRole84F9F30C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapTaskDef-usl29b/ExecutionRole/Resource"
   }
  },
  "MiniSwapTaskDefusl29bExecutionRoleDefaultPolicy7F1D4572": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:us-east-1:720759362243:repository/cdk-hnb659fds-container-assets-720759362243-us-east-1"
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MiniSwapLogGroupusl29b337C0054",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "MiniSwapDBSecretusl29b8A0A0D0D"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MiniSwapTaskDefusl29bExecutionRoleDefaultPolicy7F1D4572",
    "Roles": [
     {
      "Ref": "MiniSwapTaskDefusl29bExecutionRole84F9F30C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapTaskDef-usl29b/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "MiniSwapFargateSecurityGroupusl29b26EA0510": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for MiniSwap Fargate service",
    "GroupName": "miniswap-fargate-sg-usl29b",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCusl29b518B2E7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapFargateSecurityGroup-usl29b/Resource"
   }
  },
  "MiniSwapFargateSecurityGroupusl29bfromMiniSwapDatabaseStackMiniSwapALBSecurityGroupusl29bCFEB96B230007E4629F6": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow ALB to access Fargate service",
    "FromPort": 3000,
    "GroupId": {
     "Fn::GetAtt": [
      "MiniSwapFargateSecurityGroupusl29b26EA0510",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "MiniSwapALBSecurityGroupusl29b948A6938",
      "GroupId"
     ]
    },
    "ToPort": 3000
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapFargateSecurityGroup-usl29b/from MiniSwapDatabaseStackMiniSwapALBSecurityGroupusl29bCFEB96B2:3000"
   }
  },
  "MiniSwapALBSecurityGroupusl29b948A6938": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for MiniSwap Application Load Balancer",
    "GroupName": "miniswap-alb-sg-usl29b",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTP traffic from internet",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "MiniSwapVPCusl29b518B2E7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapALBSecurityGroup-usl29b/Resource"
   }
  },
  "MiniSwapALBusl29b60B0504E": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Name": "miniswap-alb-usl29b",
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "MiniSwapALBSecurityGroupusl29b948A6938",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "MiniSwapVPCusl29bpublicsubnetSubnet1Subnet49E7E691"
     },
     {
      "Ref": "MiniSwapVPCusl29bpublicsubnetSubnet2Subnet73587C59"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "MiniSwapVPCusl29bpublicsubnetSubnet1DefaultRouteE80D05E9",
    "MiniSwapVPCusl29bpublicsubnetSubnet1RouteTableAssociationE618AE41",
    "MiniSwapVPCusl29bpublicsubnetSubnet2DefaultRouteDCB7CC0D",
    "MiniSwapVPCusl29bpublicsubnetSubnet2RouteTableAssociationD8436414"
   ],
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapALB-usl29b/Resource"
   }
  },
  "MiniSwapALBusl29bMiniSwapListenerusl29b2C124582": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "MiniSwapTargetGroupusl29bB61DC5FE"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "MiniSwapALBusl29b60B0504E"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapALB-usl29b/MiniSwapListener-usl29b/Resource"
   }
  },
  "MiniSwapTargetGroupusl29bB61DC5FE": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckIntervalSeconds": 30,
    "HealthCheckPath": "/api/health",
    "HealthCheckProtocol": "HTTP",
    "HealthCheckTimeoutSeconds": 10,
    "HealthyThresholdCount": 2,
    "Name": "miniswap-tg-usl29b",
    "Port": 3000,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "UnhealthyThresholdCount": 3,
    "VpcId": {
     "Ref": "MiniSwapVPCusl29b518B2E7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapTargetGroup-usl29b/Resource"
   }
  },
  "MiniSwapFargateServiceusl29bService06DA636F": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "MiniSwapECSClusterusl29bD0F02DE0"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "miniswap-app-usl29b",
      "ContainerPort": 3000,
      "TargetGroupArn": {
       "Ref": "MiniSwapTargetGroupusl29bB61DC5FE"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "MiniSwapFargateSecurityGroupusl29b26EA0510",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "MiniSwapVPCusl29bprivatesubnetSubnet1SubnetAB161AF0"
       },
       {
        "Ref": "MiniSwapVPCusl29bprivatesubnetSubnet2Subnet35BDCC6E"
       }
      ]
     }
    },
    "ServiceName": "miniswap-service-usl29b",
    "TaskDefinition": {
     "Ref": "MiniSwapTaskDefusl29b4FFC3C78"
    }
   },
   "DependsOn": [
    "MiniSwapALBusl29bMiniSwapListenerusl29b2C124582",
    "MiniSwapTaskDefusl29bTaskRole0C0CFDC4"
   ],
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/MiniSwapFargateService-usl29b/Service"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31STW/bMAz9Lb0rWmv0smM+tsJAsRl2kWtBy6zHxpYMkUoQGP7vg2zH8XrYie89PokUqUQnT8/68QEuvDHVadNQqftCwJwUXPi9R5Po/tgZtf+wx2yvMk9nECxCaVGieEe5C4JvUDZ41+/altkZAiFnF7PKQtmQuV/xI81i+AXyAoIXuEaWWkFvcS0ds/3MtiJg/rRoRRVogie5vngXurGF/wqprT0yD4rReBRuwUKNXvfFyGd/RFN4A1+jrOothq+ZQfmKdT89ayl+2K2FAwiUwJhaFrAGJ8eNDQoN637fBBb0MXeDP8HXEEfKpwN+kKXbQL8qzgqQRb/S5rMF+jNNFWc4qMbVrPtXVy/t3vCgCFrd525a6xgz15AZFzGh2K5/B2YU1gdnTujTFuq4c5SY0zl2jkmcv+6AUWEDLGQaB1UJDVhDtj4nut92XUNm/CSvDqrdmJsG8A9f+4gF7ey54VV+Ws7yrBUdBpUju+ANqrHTQqAmW0fb7yBdkEFZV6H+5G/n5FE/fdfPD59MtPHBCrWo8yn+BeXoXslEAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "MiniSwapDatabaseStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "VpcIdusl29b": {
   "Description": "VPC ID for MiniSwap",
   "Value": {
    "Ref": "MiniSwapVPCusl29b518B2E7E"
   },
   "Export": {
    "Name": "MiniSwap-VPC-usl29b"
   }
  },
  "DatabaseEndpointusl29b": {
   "Description": "RDS Database Endpoint",
   "Value": {
    "Fn::GetAtt": [
     "MiniSwapDBusl29bB8A79B3F",
     "Endpoint.Address"
    ]
   },
   "Export": {
    "Name": "MiniSwap-DB-Endpoint-usl29b"
   }
  },
  "DatabaseSecretArnusl29b": {
   "Description": "Database Secret ARN",
   "Value": {
    "Ref": "MiniSwapDBSecretusl29b8A0A0D0D"
   },
   "Export": {
    "Name": "MiniSwap-DB-Secret-usl29b"
   }
  },
  "ECSClusterNameusl29b": {
   "Description": "ECS Cluster Name",
   "Value": {
    "Ref": "MiniSwapECSClusterusl29bD0F02DE0"
   },
   "Export": {
    "Name": "MiniSwap-ECS-Cluster-usl29b"
   }
  },
  "TaskDefinitionArnusl29b": {
   "Description": "Fargate Task Definition ARN",
   "Value": {
    "Ref": "MiniSwapTaskDefusl29b4FFC3C78"
   },
   "Export": {
    "Name": "MiniSwap-TaskDef-usl29b"
   }
  },
  "LogGroupNameusl29b": {
   "Description": "CloudWatch Log Group Name",
   "Value": {
    "Ref": "MiniSwapLogGroupusl29b337C0054"
   },
   "Export": {
    "Name": "MiniSwap-LogGroup-usl29b"
   }
  },
  "LoadBalancerDNSusl29b": {
   "Description": "Application Load Balancer DNS Name",
   "Value": {
    "Fn::GetAtt": [
     "MiniSwapALBusl29b60B0504E",
     "DNSName"
    ]
   },
   "Export": {
    "Name": "MiniSwap-ALB-DNS-usl29b"
   }
  },
  "ServiceNameusl29b": {
   "Description": "ECS Fargate Service Name",
   "Value": {
    "Fn::GetAtt": [
     "MiniSwapFargateServiceusl29bService06DA636F",
     "Name"
    ]
   },
   "Export": {
    "Name": "MiniSwap-Service-usl29b"
   }
  },
  "ApplicationURLusl29b": {
   "Description": "Application URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "MiniSwapALBusl29b60B0504E",
        "DNSName"
       ]
      }
     ]
    ]
   }
  },
  "RandomSuffix": {
   "Description": "Random suffix used for resource names",
   "Value": "usl29b"
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}